generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id           String    @id @default(uuid())
  name         String
  email        String    @unique
  imageUrl     String
  userId       String    @unique
  createdAt    DateTime  @default(now())
  hashPassword String
  updatedAt    DateTime  @default(now())
  Channel      Channel[]
  Member       Member[]
  Server       Server[]
}

model Server {
  id         String    @id @default(uuid())
  name       String
  imageUrl   String
  inviteCode String    @unique
  profileId  String
  createdAt  DateTime  @default(now())
  Channel    Channel[]
  Member     Member[]
  profile    Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@index([profileId])
}

model Member {
  id        String     @id @default(uuid())
  role      MemberRole @default(GUEST)
  profileId String
  serverId  String
  createdAt DateTime   @default(now())
  updatedAt DateTime
  profile   Profile    @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server    Server     @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}

model Channel {
  id        String      @id @default(uuid())
  name      String
  type      ChannelType @default(TEXT)
  profileId String
  serverId  String
  createdAt DateTime    @default(now())
  updatedAt DateTime
  profile   Profile     @relation(fields: [profileId], references: [id], onDelete: Cascade)
  server    Server      @relation(fields: [serverId], references: [id], onDelete: Cascade)

  @@index([profileId])
  @@index([serverId])
}

enum MemberRole {
  ADMIN
  MODERATOR
  GUEST
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}
